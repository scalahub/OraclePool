package oraclepool.v1

import kiosk.ergo._
import oraclepool.v1.OraclePool
import org.scalatest.{Matchers, PropSpec}
import scorex.crypto.hash.Blake2b256

class AddressSpec extends PropSpec with Matchers {
  lazy val minBoxValue = 2000000 // min value to remain AFTER paying rewards. For min value to keep BEFORE rewards, see minPoolBoxValue
  val pool = new OraclePool {}

  import pool._

  property("Display Addresses") {
    liveEpochAddress shouldEqual "NTkuk55NdwCXkF1e2nCABxq7bHjtinX3wH13zYPZ6qYT71dCoZBe1gZkh9FAr7GeHo2EpFoibzpNQmoi89atUjKRrhZEYrTapdtXrWU4kq319oY7BEWmtmRU9cMohX69XMuxJjJP5hRM8WQLfFnffbjshhEP3ck9CKVEkFRw1JDYkqVke2JVqoMED5yxLVkScbBUiJJLWq9BSbE1JJmmreNVskmWNxWE6V7ksKPxFMoqh1SVePh3UWAaBgGQRZ7TWf4dTBF5KMVHmRXzmQqEu2Fz2yeSLy23sM3pfqa78VuvoFHnTFXYFFxn3DNttxwq3EU3Zv25SmgrWjLKiZjFcEcqGgH6DJ9FZ1DfucVtTXwyDJutY3ksUBaEStRxoUQyRu4EhDobixL3PUWRcxaRJ8JKA9b64ALErGepRHkAoVmS8DaE6VbroskyMuhkTo7LbrzhTyJbqKurEzoEfhYxus7bMpLTePgKcktgRRyB7MjVxjSpxWzZedvzbjzZaHLZLkWZESk1WtdM25My33wtVLNXiTvficEUbjA23sNd24pv1YQ72nY1aqUHa2"
    epochPrepAddress shouldEqual "EfS5abyDe4vKFrJ48K5HnwTqa1ksn238bWFPe84bzVvCGvK1h2B7sgWLETtQuWwzVdBaoRZ1HcyzddrxLcsoM5YEy4UnqcLqMU1MDca1kLw9xbazAM6Awo9y6UVWTkQcS97mYkhkmx2Tewg3JntMgzfLWz5mACiEJEv7potayvk6awmLWS36sJMfXWgnEfNiqTyXNiPzt466cgot3GLcEsYXxKzLXyJ9EfvXpjzC2abTMzVSf1e17BHre4zZvDoAeTqr4igV3ubv2PtJjntvF2ibrDLmwwAyANEhw1yt8C8fCidkf3MAoPE6T53hX3Eb2mp3Xofmtrn4qVgmhNonnV8ekWZWvBTxYiNP8Vu5nc6RMDBv7P1c5rRc3tnDMRh2dUcDD7USyoB9YcvioMfAZGMNfLjWqgYu9Ygw2FokGBPThyWrKQ5nkLJvief1eQJg4wZXKdXWAR7VxwNftdZjPCHcmwn6ByRHZo9kb4Emv3rjfZE"
    dataPointAddress shouldEqual "AucEQEJ3Y5Uhmu4o8dsrHy28nRTgX5sVtXvjpMTqdMQzBR3uRVcvCFbv7SeGuPhQ16AXBP7XWdMShDdhRy4cayZgxHSkdAVuTiZRvj6WCfmhXJ4LY2E46CytRAnkiYubCdEroUUX2niMLhjNmDUn4KmXWSrKngrfGwHSaD8RJUMEp5AGADaChRU6kAnh9nstkDN3"
    poolDepositAddress shouldEqual "4L1NEtpkMq6NeZhy2pk6omYvewovcHTm7CbxKm9djsbobAHSdDe6TVfmnW5THVpSHrG6rWovqv7838reswYE3UYkykWaNnhoyBGHFCdZvWqa2TVRtHiWcVaner6giUp55ZpELLuj9TtKePv6zrtMV5YE1o2kjrQEgGDoGHBGNuyx6ymXkSimcAQo1oD4f4tTcuBfWfp"
    updateAddress shouldEqual "Su1rWdkh3KvNSBUiJDHjtzgeDL5cPyZYbvkpXGSUwehqLwUK6N7Vu4FUUzwajHikSpYNhTFRgabQN9CTNZJHZ53mn9ZY9SNTWVED65gxqGjoJKhQEFnwwNe6MSYxhMqVSy5Tf9qJstj7XwLfwe1skFWvCuLwCmxDDFekEXyqsscKaXuk7LDahpas336EEewxoqB4zsBiuCW7jzQ8uRHL7f7t2CrUVjiuTUe7DL7ihTs5rp2wK9zGUu8CGueQnvU5355wNu8sw42To1unxGJSV6VjrqLbdEcZtXDd2H1UwvVT5JDhDvF2GDfUqjQ7jREq4KaCs3wb6Yk3SCzzNWXsq77dbDGe2hj2svHk1iHUhbExu6vnxhguWrvaLA3HpftqNEBsEgQ59aPi4jjm3dMaqbib6nNh8e3Cs"
    ballotAddress shouldEqual "7gak11YHej2wnu7YFDxdNmQibKHrXjysJkcb2wRyq3Kqxcvo75HtchnCtUdL4YxY86NE6kV4m4PsWaPc3gTGLiBDSudMb2K8Ep48eVnJaUotoQmtH9A4mBkTyTaYD12Cogt5iLqPegFQYkLjdsBbPUzoGaNBk2KSZNHqNY23roZ78Ey13mRTSZatdb7jDVU4"
    ballotErgoTree.bytes.encodeHex shouldEqual "100504000580dac409040004000e20720978c041239e7d6eb249d801f380557126f6324e12c5ba9172d820be2e1dded802d601b2a5dc0c1aa402a7730000d602e4c6a70407ea02d1ededed93e4c672010407720293c27201c2a793db63087201db6308a792c172017301eb02cd7202d1ed938cb2db6308b2a473020073030001730492c17201c1a7"
    epochPrepScriptHash shouldEqual "f7ef73c4a4ab91b84bb0a2905108d534114472ec057be3a57a9dfc9b1fbd85c1"
    liveEpochScriptHash shouldEqual "77dffd47b690caa52fe13345aaf64ecdf7d55f2e7e3496e8206311f491aa46cd"
    minPoolBoxValue shouldEqual 5000000

    // for MockUpdateSpec
    val newPool = new OraclePool {
      override def minOracleBoxes: Int = 5 // this is different
    }
    newPool.epochPrepAddress shouldEqual "EfS5abyDe4vKFrJ48K7LESXx2QWyVx6Mh6aABHHuYmjm1eCQT1YcWaJUdurd3W9BSrQdjS8qXw7V3jcVtpuVNQQfxqQzpLJ3i5nQ2Fm1H11gGqc7fWM73HiWAa9gwa8Bw5wbUN6jocGVwyCfsSdAXAESKVJLpGCRce3aW6RqsCZevsg1coiNSTvZQjo8RdfaX411irMfBfYU4hU5UYvkrpJoPr6QgtmsuJym441trYrw5xHZgQFKG5FS8S226Fwx6GberrTeS5au1d7dh531imLWRShbRWMHAcWeYy1PeTpA8Nf7E8LCDwzY7wLJEdurYmZyYtyYM9itHHGf78R2rrW4JHvR71hnA28BxKmxixuzy28nssJT4RWGvEvqHX51t781cW431ZiFKLjkXzGd54odhDqKNMcUyaR9cxqoa7G91obCJS17DCLzajF1kuZYjjHEtHeteMpSWeENkBegmuEGwq4pKosTyMm4Q9DK93874no"
  }
}
